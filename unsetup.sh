#!/bin/bash

# Javascript folders (source and minified)
SOURCE_PATH=client_src
MINIFIED_PATH=client_min

# Output folders
EXTERNALS_PATH=externals
TOOLS_PATH=tools
CORPUS_PATH=corpus

#------------------------------------------------------------------------------#

function __remove_folder__ {
	FOLDER=$1
	if [ -d $FOLDER ]
	then
		echo "Removing folder: $FOLDER"
		rm -rf $FOLDER
	fi
}
function __remove_file__ {
	FILE=$1
	if [ -f $FILE ]
	then
		echo "Removing file: $FILE"
		rm -f $FILE
	fi
}

#------------------------------------------------------------------------------#

function __run_unsetup__ {
	echo "This script removes all files retrieved by setup.sh."
	echo

	__remove_folder__ $EXTERNALS_PATH
	__remove_folder__ $TOOLS_PATH
	__remove_folder__ $SOURCE_PATH/font
	__remove_folder__ $SOURCE_PATH/less
	__remove_folder__ $SOURCE_PATH/js/lib
	__remove_folder__ $MINIFIED_PATH/font
	__remove_folder__ $MINIFIED_PATH/less
	__remove_folder__ $MINIFIED_PATH/js
	__remove_folder__ $MINIFIED_PATH/css

	echo "Completed unsetup."
}

#------------------------------------------------------------------------------#

function __remove_data__ {
	echo "This script removes the 20 newsgroup dataset."
	echo

	__remove_folder__ $CORPUS_PATH/20newsgroups

	echo "Completed unsetup."
}

#------------------------------------------------------------------------------#

function __ungenerate_documentations__ {
	JSDOC=node_modules/jsdoc/jsdoc
	OUTPUT=documentation

	if [ -f "$JSDOC" ]
	then
		echo "Uninstalling jsdoc3 (requires 'npm')..."
		npm uninstall jsdoc
	fi
}

#------------------------------------------------------------------------------#

function __ungenerate_tests__ {
	MOCHA=node_modules/mocha

	if [ -d "$MOCHA" ]
	then
		echo "Uninstalling mocha..."
		npm uninstall mocha

		echo "Uninstalling require..."
		npm uninstall require

		echo "Installing chai..."
		npm uninstall chai

		echo "Uninstalling d3..."
		npm uninstall d3

		echo "Uninstalling jquery..."
		npm uninstall jquery

		echo "Uninstalling underscore..."
		npm uninstall underscore

		echo "Uninstalling backbone..."
		npm uninstall backbone
	fi
}

#------------------------------------------------------------------------------#

RUN_TOOLS=0
RUN_DATA=0
RUN_DOCS=0
RUN_TESTS=0
RUN_HELP=0
UNKNOWN_OPTION=

if [ $# -eq 0 ]
then
	RUN_HELP=1
fi
for ARG in "$@"
do
	if [ "$ARG" = "-h" ]
	then
		RUN_HELP=1
	elif [ "$ARG" = "--help" ]
	then
		RUN_HELP=1
	elif [ "$ARG" = "tools" ]
	then
		RUN_TOOLS=1
	elif [ "$ARG" = "data" ]
	then
		RUN_DATA=1
	elif [ "$ARG" = "docs" ]
	then
		RUN_DOCS=1
	elif [ "$ARG" = "tests" ]
	then
		RUN_TESTS=1
	else
		RUN_HELP=1
		UNKNOWN_OPTION=$ARG
	fi
done

if [ $RUN_HELP -eq 1 ]
then
	echo "Usage: `basename $0` [-h|--help] [tools] [data] [docs] [tests]"
	echo
	
	if [ ! -z $UNKNOWN_OPTION ]
	then
		echo "  Unknown option: $ARG"
		exit -1
	else
		echo "  tools:"
		echo "    Remove all files retrieved and generated by setup.sh."
		echo
		echo "  data:"
		echo "    Remove the 20 Newsgroups dataset."
		echo
		echo "  docs (require npm; not officially supported):"
		echo "    Remove JSDoc."
		echo
		echo "  tests (require npm; not officially supported):"
		echo "    Remove Mocha and other utilities."
		echo
		exit 0
	fi
else
	if [ $RUN_TOOLS -eq 1 ]
	then
		__run_unsetup__
		exit 0
	fi
	if [ $RUN_DATA -eq 1 ]
	then
		__remove_data__
	fi
	if [ $RUN_DOCS -eq 1 ]
	then
		__ungenerate_documentations__
		exit 0
	fi
	if [ $RUN_TESTS -eq 1 ]
	then
		__ungenerate_tests__
		exit 0
	fi
fi
